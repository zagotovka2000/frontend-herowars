// components/MainMap/MainMap.js
import React from 'react';
import { useApp } from '../../contex/AppContext';
import { useNavigation } from '../../contex/NavigationContext'; // –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç
import ResourceBar from '../Common/ResourceBar';
import './MainMap.css';

const MainMap = () => {
  const { state } = useApp();
  const { navigateTo } = useNavigation(); // –ü–æ–ª—É—á–∞–µ–º navigateTo –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

  // –ú–∞—Å—Å–∏–≤ –∏–≥—Ä–æ–≤—ã—Ö —Ä–µ–∂–∏–º–æ–≤ —Å –ø–æ–∑–∏—Ü–∏—è–º–∏
  const gameModes = [
    {
      id: 'campaign',
      name: '–ö–∞–º–ø–∞–Ω–∏—è',
      icon: '‚öîÔ∏è',
      position: { top: '20%', left: '10%' },
      description: '–§–∞—Ä–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (6‚ö°)',
      energyCost: 6,
      serverEndpoint: '/campaign'
    },
    {
      id: 'arena',
      name: '–ü–≤–ü –ê—Ä–µ–Ω–∞',
      icon: 'üèÜ',
      position: { top: '30%', right: '15%' },
      description: '–ë–∏—Ç–≤—ã 5x5',
      serverEndpoint: '/battle'
    },
    {
      id: 'guild-war',
      name: '–í–æ–π–Ω–∞ –ì–∏–ª—å–¥–∏–π',
      icon: 'üè∞',
      position: { top: '45%', left: '20%' },
      description: '–°—Ä–∞–∂–µ–Ω–∏—è –≥–∏–ª—å–¥–∏–π',
      serverEndpoint: '/guild/war'
    },
    {
      id: 'expedition',
      name: '–≠–∫—Å–ø–µ–¥–∏—Ü–∏–∏',
      icon: 'üó∫Ô∏è',
      position: { top: '60%', right: '25%' },
      description: '15–º–∏–Ω - 3—á–∞—Å–∞',
      serverEndpoint: '/expedition'
    },
    {
      id: 'shop',
      name: '–ú–∞–≥–∞–∑–∏–Ω',
      icon: 'üè™',
      position: { top: '70%', left: '15%' },
      description: '–¢–æ—Ä–≥–æ–≤–µ—Ü',
      serverEndpoint: '/shop'
    },
    {
      id: 'collection',
      name: '–ö–æ–ª–ª–µ–∫—Ü–∏—è',
      icon: 'üÉè',
      position: { bottom: '20%', left: '30%' },
      description: '–ú–æ—â—å –∫–∞—Ä—Ç: 1250',
      serverEndpoint: '/collection'
    },
    {
      id: 'daily-reward',
      name: '–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ù–∞–≥—Ä–∞–¥–∞',
      icon: 'üéÅ',
      position: { top: '10%', left: '50%', transform: 'translateX(-50%)' },
      description: '–ó–∞—Ö–æ–¥–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!',
      serverEndpoint: '/daily-reward'
    },
    {
      id: 'quests',
      name: '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –ö–≤–µ—Å—Ç—ã',
      icon: 'üìú',
      position: { bottom: '15%', right: '20%' },
      description: '–ó–∞–¥–∞–Ω–∏—è',
      serverEndpoint: '/quests'
    },
    {
      id: 'free-chest',
      name: '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –°—É–Ω–¥—É–∫',
      icon: 'üì¶',
      position: { top: '40%', left: '45%' },
      description: '–î–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑: 02:15:30',
      serverEndpoint: '/free-chest'
    }
  ];

  const handleModeClick = async (mode) => {
    console.log(`–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º: ${mode.name}`);
    
    // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
    if (mode.serverEndpoint) {
      try {
        console.log(`–í—ã–∑–æ–≤ API: ${mode.serverEndpoint}`);
        
        // –ó–∞–≥–ª—É—à–∫–∞ - –∏–º–∏—Ç–∞—Ü–∏—è API –≤—ã–∑–æ–≤–∞
        const mockResponse = await mockApiCall(mode.serverEndpoint);
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', mockResponse);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º navigateTo –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        navigateTo(mode.id);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ API:', error);
      }
    } else {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º navigateTo –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
      navigateTo(mode.id);
    }
  };

  // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ API –≤—ã–∑–æ–≤–æ–≤
  const mockApiCall = (endpoint) => {
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve({
          success: true,
          endpoint: endpoint,
          data: { message: `–†–µ–∂–∏–º ${endpoint} –∑–∞–≥—Ä—É–∂–µ–Ω` }
        });
      }, 500);
    });
  };

  return (
    <div className="main-map">
      <div className="map-background"></div>
      <ResourceBar />
      
      {/* –ò–≥—Ä–æ–≤—ã–µ —Ä–µ–∂–∏–º—ã */}
      {gameModes.map(mode => (
        <div
          key={mode.id}
          className={`game-mode ${state.user.energy < (mode.energyCost || 0) ? 'disabled' : ''}`}
          style={mode.position}
          onClick={() => handleModeClick(mode)}
        >
          <div className="mode-icon">{mode.icon}</div>
          <div className="mode-content">
            <div className="mode-name">{mode.name}</div>
            <div className="mode-description">{mode.description}</div>
            {mode.energyCost && (
              <div className="energy-cost">‚ö° {mode.energyCost}</div>
            )}
          </div>
        </div>
      ))}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–∏–ª—å–¥–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å) */}
      {state.guild && (
        <div className="guild-info" style={{ top: '5%', right: '5%' }}>
          <div className="guild-name">{state.guild.name}</div>
          <div className="guild-rank">–†–∞–Ω–≥: #{state.guild.rank}</div>
        </div>
      )}
    </div>
  );
};

export default MainMap;
